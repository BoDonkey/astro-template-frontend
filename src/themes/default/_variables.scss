@use "sass:map";
@use "sass:color";
@use "bulma/sass/utilities/derived-variables" as dv;
@use "bulma/sass/themes/dark";
@use "../theme-base";

// Get Bulma's default colors
$colors: dv.$colors;

// Function to create dark variant of a color
@function create-dark-variant($color) {
  @if type-of($color) == 'color' {
    // Darken and adjust saturation for dark mode
    $darkened: color.adjust(
      $color,
      $lightness: -10%,
      $saturation: -5%
    );
    
    // If the result is too dark, lighten it
    @if color.lightness($darkened) < 20% {
      $darkened: color.adjust($darkened, $lightness: 15%);
    }
    
    @return $darkened;
  }
  @return $color;
}

// Create dark mode color variants
$dark-colors: (
  "white": #fff,
  "black": #0a0a0a,
  "light": #484848,
  "dark": #f5f5f5,
  "primary": create-dark-variant(map.get($colors, "primary")),
  "link": create-dark-variant(map.get($colors, "link")),
  "info": create-dark-variant(map.get($colors, "info")),
  "success": create-dark-variant(map.get($colors, "success")),
  "warning": create-dark-variant(map.get($colors, "warning")),
  "danger": create-dark-variant(map.get($colors, "danger")),
  "text": #dbdbdb,
  "text-strong": #fff,
  "text-light": #b5b5b5,
  "background": #121212,
  "border": #404040,
  "code": #ff3860,
  "pre": #f5f5f5,
  "pre-background": #2c2c2c
);

// Light theme - use Bulma defaults
$custom-colors-light: () !default;

// Dark theme - use our dark color variants
$custom-colors-dark: $dark-colors !default;

// Dark theme scheme colors
$scheme-main: #0a0a0a;
$scheme-main-bis: #121212;
$scheme-main-ter: #242424;
$scheme-invert: #fff;
$scheme-invert-bis: #ededed;
$scheme-invert-ter: #dbdbdb;

@mixin default-theme-light {
  @include theme-base.theme-base("default", $custom-colors-light, false);
}

@mixin default-theme-dark {
  // Include dark theme base variables
  @include dark.dark-theme;
  @include theme-base.theme-base("default", $custom-colors-dark, true);
  
  // Additional dark mode specific adjustments
  --scheme-main: #{$scheme-main};
  --scheme-main-bis: #{$scheme-main-bis};
  --scheme-main-ter: #{$scheme-main-ter};
  --scheme-invert: #{$scheme-invert};
  --scheme-invert-bis: #{$scheme-invert-bis};
  --scheme-invert-ter: #{$scheme-invert-ter};
  
  // Ensure proper contrast for text
  --text: #{map.get($dark-colors, "text")};
  --text-strong: #{map.get($dark-colors, "text-strong")};
  --text-light: #{map.get($dark-colors, "text-light")};
  
  // Background colors
  --background: #{map.get($dark-colors, "background")};
  
  // Border colors
  --border: #{map.get($dark-colors, "border")};
  --border-hover: #{color.adjust(map.get($dark-colors, "border"), $lightness: 20%)};
  
  // Code highlighting
  --code: #{map.get($dark-colors, "code")};
  --pre: #{map.get($dark-colors, "pre")};
  --pre-background: #{map.get($dark-colors, "pre-background")};
}