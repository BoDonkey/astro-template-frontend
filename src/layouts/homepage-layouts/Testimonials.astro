---
const {
  sectionTitle,
  backgroundColor,
  testimonials,
  bgStyle = 'auto' // New prop to control background style
} = Astro.props.data;

const getBulmaClass = (prefix, color) => color ? `${prefix}-${color}` : '';

const getImageWithFallback = (imageRelationship, useFallback, fallbackUrl) => {
  if (!useFallback) return null;
  if (!Array.isArray(imageRelationship) || !imageRelationship.length) {
    return fallbackUrl;
  }
  return imageRelationship[0]?.attachment?._urls?.['one-sixth'] || fallbackUrl;
};

// Process testimonials
const processedTestimonials = testimonials.map(item => ({
  ...item,
  avatarUrl: getImageWithFallback(
    item._avatar, 
    item.addAuthorImage, 
    `https://picsum.photos/190/350?random=${Math.random()}`
  )
}));
---

<section class={`section py-20 overflow-hidden ${getBulmaClass('has-background', backgroundColor)}`}>
  <div class="container">
    {sectionTitle && (
      <h2 class="title is-2 has-text-centered mb-6">{sectionTitle}</h2>
    )}

    <div class="columns is-variable is-8">
      {processedTestimonials.map(item => (
        <div class="column">
          <div class={`testimonial-bg ${bgStyle}`}></div>
          <div class="card testimonial-card">
            <div class="avatar-container">
              {item.avatarUrl && (
                <figure class="image">
                  <img 
                    src={item.avatarUrl} 
                    alt={item.author || 'Author image'}
                    class="is-rounded"
                  />
                </figure>
              )}
            </div>
            <div class="card-content has-text-centered">
              <blockquote class="mb-5">"{item.quote}"</blockquote>
              <div class="divider"></div>
              <div class="author-info">
                <h4 class="has-text-weight-bold">{item.author}</h4>
                <p class="is-size-7 has-text-grey">{item.role}</p>
              </div>
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
.testimonial-card {
  position: relative;
  padding-top: 3rem;
  height: 100%;
  overflow: visible;
}

.testimonial-bg {
  position: absolute;
  inset: -1rem;
  border-radius: 0.75rem;
  z-index: 0;
  animation: sway 10s ease-in-out infinite;
}

/* Different background styles */
.testimonial-bg.auto {
  background: linear-gradient(to right, rgba(0,0,0,0.03), rgba(0,0,0,0.02));
}

.testimonial-bg.light {
  background: linear-gradient(to right, rgba(255,255,255,0.4), rgba(255,255,255,0.3));
}

.testimonial-bg.dark {
  background: linear-gradient(to right, rgba(0,0,0,0.1), rgba(0,0,0,0.08));
}

@keyframes sway {
  0%, 100% { transform: rotate(-2deg); }
  50% { transform: rotate(2deg); }
}

.avatar-container {
  position: absolute;
  top: -2.5rem;
  left: 50%;
  transform: translateX(-50%);
  z-index: 2;
}

.avatar-container .image {
  width: 5rem;
  height: 5rem;
  border: 4px solid white;
  border-radius: 50%;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
}

.avatar-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

blockquote {
  font-size: 1.1rem;
  line-height: 1.6;
  color: #4a5568;
}

.divider {
  width: 3rem;
  height: 0.25rem;
  background-color: currentColor;
  border-radius: 9999px;
  margin: 1rem auto;
  opacity: 0.6;
}

.card-content {
  position: relative;
  z-index: 1;
}

.author-info {
  margin-top: 1rem;
}

:global(.theme-dark) .testimonial-bg.auto {
  background: linear-gradient(to right, rgba(255,255,255,0.4), rgba(255,255,255,0.3));
}

/* Responsive adjustments */
@media screen and (max-width: 768px) {
  .columns {
    margin-left: -0.75rem;
    margin-right: -0.75rem;
  }

  .column {
    padding: 2rem 0.75rem;
  }

  .testimonial-card {
    margin-top: 2.5rem;
  }
}
</style>