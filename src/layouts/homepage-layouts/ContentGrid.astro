---
const {
  sectionTitle,
  sectionSubtitle,
  backgroundColor,
  gridItems
} = Astro.props.data;

const getBulmaClass = (prefix, color) => color ? `${prefix}-${color}` : '';

const getImageWithFallback = (imageRelationship, useFallback, fallbackUrl) => {
  if (!useFallback) return null;
  if (!Array.isArray(imageRelationship) || !imageRelationship.length) {
    return fallbackUrl;
  }
  return imageRelationship[0]?.attachment?._urls?.['one-sixth'] || fallbackUrl;
};

// Process grid items
const processedGridItems = gridItems.map((item) => ({
  ...item,
  imageUrl: getImageWithFallback(
    item._image,
    item.addImage,
    `https://picsum.photos/600/400?random=${Math.random()}`
  )
}));
---

<section class={`section py-6 ${getBulmaClass('has-background', backgroundColor)}`}>
  <div class="container">
    {sectionTitle && (
      <h2 class="title has-text-centered mb-3">{sectionTitle}</h2>
    )}
    {sectionSubtitle && (
      <p class="subtitle has-text-centered mb-6">{sectionSubtitle}</p>
    )}

    <div class="content-blocks">
      {processedGridItems.map((item, index) => (
        <div class="columns is-vcentered my-6">
          {/* Image Column */}
          <div class={`column is-6 ${
            item.imagePosition === 'right' ? 'is-order-2' : ''
          }`}>
            {item.imageUrl && (
              <figure class="image">
                <img
                  src={item.imageUrl}
                  alt={item.blockTitle || 'Content image'}
                  class="has-shadow is-rounded"
                />
              </figure>
            )}
          </div>

          {/* Content Column */}
          <div class={`column is-5 is-offset-1 ${
            item.imagePosition === 'right' ? 'is-order-1' : ''
          }`}>
            <h3 class="title is-3 mb-4">{item.blockTitle}</h3>
            <div class="content mb-5">
              {item.data}
            </div>
            {item.ctaText && item.ctaUrl && (
              <a 
                href={item.ctaUrl} 
                class={`button ${getBulmaClass('is', item.ctaColor)} is-medium`}
              >
                {item.ctaText}
              </a>
            )}
          </div>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
.has-shadow {
  box-shadow: 0 8px 30px rgba(0,0,0,0.12);
}

.content-blocks {
  max-width: 1200px;
  margin: 0 auto;
}

.content {
  font-size: 1.1rem;
  line-height: 1.8;
}
</style>
